version: '3.8'

services:
  user-api:
    build:
      context: ./api1
      dockerfile: Dockerfile
    container_name: user-api-container
    ports:
      - "6000:6000"
    environment:
      - DJANGO_SETTINGS_MODULE=userapi.settings
      - MONGODB_URI=mongodb+srv://quandeptrai5122004_db_user:9ITqxCZA59oLgLRd@cluster0.w4cqlgx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./api1:/app
    networks:
      - api-network
    restart: unless-stopped

  product-api:
    build:
      context: ./api2
      dockerfile: Dockerfile
    container_name: product-api-container
    ports:
      - "6001:6001"
    environment:
      - DJANGO_SETTINGS_MODULE=productapi.settings
      - MONGODB_URI=mongodb+srv://quandeptrai5122004_db_user:9ITqxCZA59oLgLRd@cluster0.w4cqlgx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./api2:/app
    networks:
      - api-network
    restart: unless-stopped

  order-api:
    build:
      context: ./api3
      dockerfile: Dockerfile
    container_name: order-api-container
    ports:
      - "6002:6002"
    environment:
      - DJANGO_SETTINGS_MODULE=orderapi.settings
      - MONGODB_URI=mongodb+srv://quandeptrai5122004_db_user:9ITqxCZA59oLgLRd@cluster0.w4cqlgx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./api3:/app
    networks:
      - api-network
    restart: unless-stopped

  payment-api:
    build:
      context: ./api4
      dockerfile: Dockerfile
    container_name: payment-api-container
    ports:
      - "6003:6003"
    environment:
      - DJANGO_SETTINGS_MODULE=paymentapi.settings
      - MONGODB_URI=mongodb+srv://quandeptrai5122004_db_user:9ITqxCZA59oLgLRd@cluster0.w4cqlgx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./api4:/app
    networks:
      - api-network
    restart: unless-stopped

# MongoDB Atlas is used instead of local MongoDB

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - api-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - api-network
    depends_on:
      - prometheus
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch-container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./logging/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - api-network
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-container
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    volumes:
      - ./logging/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - api-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-container
    ports:
      - "5044:5044"
      - "5000:5000"
    volumes:
      - ./logging/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logging/logstash/pipeline:/usr/share/logstash/pipeline
    networks:
      - api-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  api-network:
    driver: bridge
